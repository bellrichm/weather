-
  # still looking for a good way to handle branches
  branches:
    except:
    - master

  cache:
    - C:\ProgramData\chocolatey\bin
    - C:\ProgramData\chocolatey\lib

  version: 1.0.{build}

  image: Previous Visual Studio 2019

  environment:
    COVERALLS_REPO_TOKEN: ${COVERALLS_REPO_TOKEN}
    SONARQUBE_REPO_TOKEN: ${SONARQUBE_REPO_TOKEN}
    AZURE_PW: ${AZURE_PW}
    ARTIFACT_NAME: ${ARTIFACT_NAME}
    BRANCH_NAME: ${BRANCH_NAME}
    DEPLOY: ${DEPLOY}

  # cannot be a script, because this is before the pull of the code
  # just trying to short circuit a build if not for expected branch
  # Blank lines are important!
  init:
    - ps: >-
        Write-Host "******************************** Init ********************************"

        Write-Host "BRANCH_NAME:           $env:BRANCH_NAME"

        Write-Host "APPVEYOR_REPO_BRANCH:  $env:APPVEYOR_REPO_BRANCH"

        If ($env:APPVEYOR_REPO_BRANCH -ne $env:BRANCH_NAME)
        {
          $env:APPVEYOR_SKIP_FINALIZE_ON_EXIT = true
          Exit-AppVeyorBuild
        }

  install:
    - ps: appveyor/init.ps1
    - ps: appveyor/install_api.ps1
    - ps: appveyor/install_app.ps1    

  before_build:
    - ps: appveyor/before_build_api.ps1
    - ps: appveyor/before_build_app.ps1

  build_script:
    - ps: appveyor/build_api.ps1
    - ps: appveyor/build_app.ps1

  # Order matters, Need to run app first to generate the lcov 
  # The sonarqube end in api will upload it 
  after_build:
    - ps: appveyor/after_build_test_unit_app.ps1
    - ps: appveyor/after_build_test_unit_api.ps1
    - ps: appveyor/after_build_test_unit_post.ps1

  test_script:
    - ps: appveyor/test_integration_api.ps1

  before_deploy:
    - ps: appveyor/before_deploy_api.ps1

  deploy_script:
    - ps: appveyor/deploy.ps1

  after_deploy:
    - ps: appveyor/after_deploy_smoke.ps1
